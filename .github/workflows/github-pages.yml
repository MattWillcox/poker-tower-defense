name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]  # Adjust this to your main branch name if different
  workflow_dispatch:    # Allow manual triggering

jobs:
  deploy-to-github-pages:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up environment
      run: |
        mkdir -p docs
        mkdir -p scripts
        
        # Create a simple script to generate GitHub Pages content
        cat > scripts/generate-github-pages.sh << 'EOFSCRIPT'
#!/bin/bash

# This script generates a GitHub Pages version of the game client
mkdir -p docs

# Get the backend URL from the command line argument or use a default
BACKEND_URL=${1:-"your-droplet-ip-or-domain.com"}

# Check if game-client.html exists
if [ ! -f game-client.html ]; then
  echo "Warning: game-client.html not found. Creating a placeholder page."
  
  # Create a placeholder index.html
  cat > docs/index.html << EOL
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Poker Tower Defense</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f0f0f0;
            color: #333;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            text-align: center;
        }
        .container {
            max-width: 800px;
            padding: 20px;
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        h1 {
            color: #2c3e50;
        }
        .button {
            display: inline-block;
            background-color: #3498db;
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
            text-decoration: none;
            margin-top: 20px;
            transition: background-color 0.3s;
        }
        .button:hover {
            background-color: #2980b9;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Poker Tower Defense</h1>
        <p>The game client is being set up. Please check back later.</p>
        <p>Backend URL: <strong>${BACKEND_URL}</strong></p>
        <a href="https://${BACKEND_URL}" class="button">Check Backend Status</a>
    </div>
</body>
</html>
EOL

  echo "Placeholder page created in the docs directory with backend URL: ${BACKEND_URL}"
  echo "Your game will be available at https://your-username.github.io/your-repo-name/"
  exit 0
fi

# Copy the game-client.html content
cat game-client.html > docs/game-client-content.html

# Create the index.html file with the template
cat > docs/index.html << EOL
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Poker Tower Defense</title>
    <style>
$(grep -n '<style>' game-client.html | cut -d: -f2- | sed 's/<style>//' | sed 's/<\/style>//')
    </style>
    <script>
        // This script will replace the backend URLs when the page loads
        window.backendUrl = "${BACKEND_URL}";
        
        // Function to replace localhost URLs with the backend URL
        function replaceBackendUrls() {
            // Find all script tags that might contain WebSocket or API URLs
            const scripts = document.querySelectorAll('script:not([src])');
            scripts.forEach(script => {
                if (script.innerHTML.includes('localhost:3000')) {
                    script.innerHTML = script.innerHTML
                        .replace(/ws:\/\/localhost:3000\/ws/g, 'wss://' + window.backendUrl + '/ws')
                        .replace(/http:\/\/localhost:3000\/api/g, 'https://' + window.backendUrl + '/api');
                }
            });
        }
        
        // Execute after the page has loaded
        document.addEventListener('DOMContentLoaded', replaceBackendUrls);
    </script>
</head>
<body>
$(grep -v -e '<!DOCTYPE' -e '<html' -e '<head>' -e '<meta' -e '<title>' -e '<style>' -e '</style>' -e '</head>' -e '<body>' -e '</body>' -e '</html>' game-client.html)
</body>
</html>
EOL

# Replace any remaining localhost:3000 references
sed -i "s|ws://localhost:3000|wss://${BACKEND_URL}|g" docs/index.html
sed -i "s|http://localhost:3000|https://${BACKEND_URL}|g" docs/index.html

echo "GitHub Pages version generated in the docs directory with backend URL: ${BACKEND_URL}"
echo "Your game will be available at https://your-username.github.io/your-repo-name/"
echo "The client will connect to your backend using secure WebSocket (WSS) and HTTPS."
EOFSCRIPT
        
        chmod +x scripts/generate-github-pages.sh
      
    - name: Generate GitHub Pages version
      run: |
        ./scripts/generate-github-pages.sh ${{ secrets.BACKEND_URL || secrets.DOMAIN_NAME || secrets.SSH_HOST }}
      
    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: docs
        branch: gh-pages 